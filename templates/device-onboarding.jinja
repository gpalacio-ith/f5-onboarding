{
    "schemaVersion": "1.0.0",
    "class": "Device",
    "async": true,
    "webhook": "https://example.com/myHook",
    "label": "my BIG-IP declaration for declarative onboarding",
    "Common": {
        "class": "Tenant",
        "mySystem": {
            "class": "System",
            "hostname": "{{ hostname }}",
            "cliInactivityTimeout": 1200,
            "consoleInactivityTimeout": 1200,
            "autoPhonehome": false
        },
        "myLicense": {
            "class": "License",
            "licenseType": "regKey",
            "regKey": "{{ license_key }}"
        },
        "myDns": {
            "class": "DNS",
            "nameServers": [
                "{{ local_dns }}",
                "{{ backup_dns }}",
                "4.2.2.2"
            ],
            "search": [
                "intouchprod.net"
            ]
        },
        "myNtp": {
            "class": "NTP",
            "servers": [
                "pool.ntp.org",
                "time.nist.gov",
                "utcnist.colorado.edu"
            ],
            "timezone": "UTC"
        },
        "root": {
            "class": "User",
            "userType": "root",
            "oldPassword": "default",
            "newPassword": "{{ root_pwd }}"
        },
        "admin": {
            "class": "User",
            "userType": "regular",
            "password": "{{ local_admin_pwd }}",
            "shell": "bash"
        },
        "f5admin": {
            "class": "User",
            "userType": "regular",
            "password": "{{ f5admin_pwd }}",
            "shell": "bash",
            "partitionAccess": {
                "all-partitions": {
                    "role": "admin"
                }
            }
        },
        "bigiqservice": {
            "class": "User",
            "userType": "regular",
            "password": "{{ bigsvc_pwd }}",
            "shell": "bash",
            "partitionAccess": {
                "all-partitions": {
                    "role": "admin"
                }
            }
        },
        "myProvisioning": {
            "class": "Provision",
            "ltm": "nominal",
            "gtm": "minimum"
        },
        "transit": {
            "class": "VLAN",
            "tag": 10,
            "mtu": 1500,
            "interfaces": [
                {
                    "name": "1.1",
                    "tagged": false
                }
            ],
            "cmpHash": "default"
        },
        "transit-self": {
            "class": "SelfIp",
            "address": "{{ transit_self_ip }}",
            "vlan": "transit",
            "allowService": "default",
            "trafficGroup": "traffic-group-local-only"
        },
        "defaultv6": {
            "class": "Route",
            "gw": "{{ default_v6_gw }}",
            "network": "default",
            "mtu": 1500
        },
        "dbvars": {
            "class": "DbVariables",
            "ui.advisory.enabled": true,
            "ui.advisory.color": "orange",
            "ui.advisory.text": "{{ gui_banner_message }}"
        },
        "sshSettings": {
            "class": "SSHD",
            "allow": [
                "10.200.0.0/21",
                "10.230.1.227"
            ],
            "banner": "This device is the property of InTouch Health. Unauthorized access is not permitted and will be prosecuted. Disconnect if you are not authorized to use this device. This session is subject to monitoring and logging.",
            "inactivityTimeout": 600,
            "ciphers": [
                "aes128-ctr",
                "aes192-ctr",
                "aes256-ctr",
                "aes128-gcm@openssh.com",
                "aes256-gcm@openssh.com",
                "chacha20-poly1305@openssh.com"
            ],
            "loginGraceTime": 120,
            "MACS": [
                "hmac-sha2-256",
                "hmac-sha2-512",
                "hmac-sha2-256-etm@openssh.com",
                "hmac-sha2-512-etm@openssh.com"
            ],
            "maxAuthTries": 10,
            "maxStartups": "5",
            "protocol": 1
        },
        "httpdSettings": {
            "class": "HTTPD",
            "allow": [
                "10.200.0.0/21",
                "172.28.5.83",
                "10.230.0.0/16"
            ],
            "authPamIdleTimeout": 36000,
            "maxClients": 10,
            "sslCiphersuite": [
                "ECDHE-RSA-AES128-GCM-SHA256",
                "ECDHE-RSA-AES256-GCM-SHA384",
                "ECDHE-RSA-AES128-SHA",
                "ECDHE-RSA-AES256-SHA",
                "ECDHE-RSA-AES128-SHA256",
                "ECDHE-RSA-AES256-SHA384",
                "ECDHE-ECDSA-AES128-GCM-SHA256",
                "ECDHE-ECDSA-AES256-GCM-SHA384",
                "ECDHE-ECDSA-AES128-SHA",
                "ECDHE-ECDSA-AES256-SHA",
                "ECDHE-ECDSA-AES128-SHA256",
                "ECDHE-ECDSA-AES256-SHA384",
                "AES128-GCM-SHA256",
                "AES256-GCM-SHA384",
                "AES128-SHA",
                "AES256-SHA",
                "AES128-SHA256"
            ],
            "sslProtocol": "all -SSLv2 -SSLv3 -TLSv1"
        },
        "myAuth": {
            "class": "Authentication",
            "enabledSourceType": "tacacs",
            "fallback": true,
            "remoteUsersDefaults": {
                "partitionAccess": "all",
                "terminalAccess": "tmsh",
                "role": "admin"
            },
            "tacacs": {
                "accounting": "send-to-first-server",
                "authentication": "use-first-server",
                "debug": false,
                "encryption": true,
                "protocol": "ip",
                "secret": "{{ tacacs_secret }}",
                "servers": [
                    "10.226.1.9",
                    "10.230.1.9"
                ],
                "service": "ppp"
            }
        },
        "deviceCertificate": {
            "class": "DeviceCertificate",
            "certificate": {
                "base64": "{{ cert_base64 }}"
            },
            "privateKey": {
                "base64": "{{ cert_key_base64 }}"
            }
        }
    }
}
